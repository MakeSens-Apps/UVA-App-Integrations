AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: >
 Este microservicio se enfoca en integrar UVA con los otros servicios 
 de MakeSens: 
 1. DeviceDataAcces
 2. MakeSensCloud
 3. UserAPI (Connection)

Globals:
  Function:
    MemorySize: 520
    Runtime: python3.9
    Architectures:
        - x86_64
    Timeout: 600
Parameters:
  # Parametros de integración con DeviceDataAccess
  SNSTopicARN:
    Type: String
    Default: arn:aws:sns:us-east-1:913045965320:RealTimeDeviceData-develop 
  TopicRegion:
    Type: String
    Default: us-east-1
  MeasurementDynamoDBStreamARN:
    Type: String
    Default: arn:aws:dynamodb:us-east-1:913045965320:table/Measurement-uqr6xntysfa3lbguhirvcj3pa4-develop/stream/2024-09-29T16:18:49.322
  # Parametros de integración con Cloud
  UVADynamoDBStreamARN:
    Type: String
    Default: arn:aws:dynamodb:us-east-1:913045965320:table/UVA-uqr6xntysfa3lbguhirvcj3pa4-develop/stream/2024-11-06T21:41:10.661
  RACIMOTableName:
    Type: String
    Default: RACIMO-uqr6xntysfa3lbguhirvcj3pa4-develop
  OrganizationName:
    Type: String
    Default: Organization-rtjffhw6ejhs7n5cxqjmxs6gzq-developer
  # UserAPI (Connection)
  MeasurementName:
    Type: String
    Default: Measurement-uqr6xntysfa3lbguhirvcj3pa4-develop


Resources:
  # DeviceDataAccess
  DynamoDBEventProcessorFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/deviceDataAccess
      Handler: dynamodb_to_sns.lambda_handler
      Events:
        DynamoDBStreamEvent:
          Type: DynamoDB
          Properties:
            Stream: !Ref MeasurementDynamoDBStreamARN
            StartingPosition: LATEST
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 10
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Sid: "DynamoDBStreamAccess"
              Effect: Allow
              Action:
                - dynamodb:ListStreams
              Resource: '*'
            - Sid: "DynamoDBStreamSpecificAccess"
              Effect: Allow
              Action:
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:DescribeStream
              Resource: !Ref MeasurementDynamoDBStreamARN
            - Sid: "SNSPublishAccess"
              Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref SNSTopicARN
      Environment:
        Variables:    
          SNSTopicARN: !Ref SNSTopicARN

  # Cloud
  UvaToCloudFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/cloud
      Handler: test.lambda_handler
      Events:
        DynamoDBStreamEvent:
          Type: DynamoDB
          Properties:
            Stream: !Ref UVADynamoDBStreamARN
            StartingPosition: LATEST
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 10
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Sid: "DynamoDBStreamAccess"
              Effect: Allow
              Action:
                - dynamodb:ListStreams
              Resource: '*'
            - Sid: "DynamoDBStreamSpecificAccess"
              Effect: Allow
              Action:
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:DescribeStream
              Resource: !Ref UVADynamoDBStreamARN
            - Sid: "DynamoDBReadAccess"
              Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:GetItem
              Resource: 
                - arn:aws:dynamodb:us-east-1:913045965320:table/RACIMO-uqr6xntysfa3lbguhirvcj3pa4-develop
                - arn:aws:dynamodb:us-east-1:913045965320:table/Organization-rtjffhw6ejhs7n5cxqjmxs6gzq-developer
      Environment:
        Variables:    
          RACIMOTable: !Ref RACIMOTableName
          OrganizationTable: !Ref OrganizationName
  
  UVALastConnection: 
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/uvaConnection
      Handler: last_connection.lambda_handler
      Runtime: python3.9
      Timeout: 600
      Events: 
        MyAPIGatewayEvent:
          Type: Api
          Properties:
            Path: /{id_uva}/connection
            Method: GET
            Auth:
              Authorizer: AWS_IAM  
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Sid: "AppSyncAccess"
              Effect: Allow
              Action:
                - appsync:GraphQL
              Resource: '*'


      
